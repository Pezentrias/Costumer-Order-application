/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Frame;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import model.IModel;
import model.Rendeles;
import model.Szemely;

/**
 *
 * @author user
 */
public class MegrendelesekDialog extends javax.swing.JDialog implements TableModelListener{
    
private IModel model;
private Frame parent;
private List<Rendeles>megrendelesek;
private List<Szemely> szemelyek;
private DefaultTableModel dtm ;
private Map <Integer, Szemely> szemelyMap;



    public MegrendelesekDialog(java.awt.Frame parent,IModel model) {
        super(parent, true);
           this.model=model;
        this.parent=parent;
        initComponents();
        setTitle("Handling Orders");
        setLocationRelativeTo(parent);
        
        dtm=(DefaultTableModel) tMegrendelesek.getModel();
        dtm.addTableModelListener(this);
       
    try {
     
        
        
        megrendelesek=model.getAllRendeles();
        szemelyek= model.getAllSzemely();
        szemelyMap=model.getSzemelyMap();
        } catch (SQLException ex) {
        MainWindow.HibaAblak(parent, ex.toString());
    }
        cbSzemely.removeAllItems();
        for (Szemely szemely : szemelyek) {
            cbSzemely.addItem(szemely);
        }
    

         btOsszes.doClick();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tMegrendelesek = new javax.swing.JTable();
        btUj = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btOk = new javax.swing.JButton();
        cbSzemely = new javax.swing.JComboBox<>();
        btOsszes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tMegrendelesek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Costumer", "Price", "Quantity", "Futfilled"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tMegrendelesek);

        btUj.setText("New");
        btUj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUjActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btOk.setText("Ok");
        btOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOkActionPerformed(evt);
            }
        });

        cbSzemely.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSzemelyActionPerformed(evt);
            }
        });

        btOsszes.setText("All");
        btOsszes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOsszesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(cbSzemely, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btUj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btOsszes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btDelete, btOk, btUj});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(cbSzemely, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(28, Short.MAX_VALUE)
                        .addComponent(btOsszes)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btUj)
                        .addGap(18, 18, 18)
                        .addComponent(btDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btOk))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btOsszesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOsszesActionPerformed
       cbSzemely.setSelectedIndex(-1);
    try {
        megrendelesek=model.getAllRendeles();
        tablafrissit();
    } catch (SQLException ex) {
        MainWindow.HibaAblak(parent, ex.toString());
    }
    }//GEN-LAST:event_btOsszesActionPerformed

    private void cbSzemelyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSzemelyActionPerformed
        Szemely kivalasztott= (Szemely) cbSzemely.getSelectedItem();
        if(kivalasztott!=null){
            try {
                megrendelesek=model.getAllRendeles(kivalasztott);
                tablafrissit();
            } catch (SQLException ex) {
                 MainWindow.HibaAblak(parent, ex.toString());
            }
            
        }
    }//GEN-LAST:event_cbSzemelyActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
      int sor= tMegrendelesek.getSelectedRow();
      if(sor>=0){
          Rendeles kivalasztott =megrendelesek.get(sor);
          int valasz=JOptionPane.showConfirmDialog(parent,"Are you sure you want to delete the order?","Are you sure",JOptionPane.YES_NO_OPTION);
          if(valasz==JOptionPane.YES_OPTION){
              try {
                  model.removeRendeles(kivalasztott);
                  megrendelesek.remove(kivalasztott);
                  tablafrissit();
              } catch (SQLException ex) {
                 MainWindow.HibaAblak(parent, ex.toString());
              }
          }
          
      }else{
          MainWindow.HibaAblak(parent, "Choose an order which you want to deletet!");
      }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOkActionPerformed
       setVisible(false);
    }//GEN-LAST:event_btOkActionPerformed

    private void btUjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUjActionPerformed
        Szemely kivalaszott =(Szemely) cbSzemely.getSelectedItem();
        MegrendelesAdatokDialog mad = new MegrendelesAdatokDialog(parent, szemelyek, kivalaszott);
        mad.setVisible(true);
        
        if(mad.isMentes()){
            try {
                model.addRendeles(mad.getMegrendeles());
                if(kivalaszott==null){
                     megrendelesek=model.getAllRendeles();
                }
                else{
                    megrendelesek=model.getAllRendeles(kivalaszott);
                }
               tablafrissit();
            } catch (SQLException ex) {
               MainWindow.HibaAblak(parent, ex.toString());
            }
        }
    }//GEN-LAST:event_btUjActionPerformed

    /**
     * @param args the command line arguments
     */
    public void tablafrissit(){
      dtm.getDataVector().removeAllElements();
      dtm.fireTableDataChanged();    
      
        for (Rendeles r : megrendelesek) {
            Vector sor=new Vector();
            
            sor.add(szemelyMap.get(r.getRendeloId()));
            sor.add(r.getOsszeg());
            sor.add(r.getDarabszam());
            sor.add(r.isTeljesitve());
            dtm.addRow(sor);
        }
      
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btOk;
    private javax.swing.JButton btOsszes;
    private javax.swing.JButton btUj;
    private javax.swing.JComboBox<Szemely> cbSzemely;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tMegrendelesek;
    // End of variables declaration//GEN-END:variables

    @Override
    public void tableChanged(TableModelEvent e) {
       int sorIndex=e.getFirstRow();
       int oszloopIndex= e.getColumn();
       
       if(sorIndex>=0&&oszloopIndex>=0&&e.getType()==TableModelEvent.UPDATE){
           Rendeles kivalaszott = megrendelesek.get(sorIndex);
           Object UjErtek= dtm.getValueAt(sorIndex, oszloopIndex);
           switch (oszloopIndex){
               case 1: kivalaszott.setOsszeg((int)UjErtek);
               break;
               
               case 2: kivalaszott.setDarabszam((int)UjErtek);
               break;
               case 3: kivalaszott.setTeljesitve((boolean)UjErtek);
               break;
           }
           try {
               model.updateRendeles(kivalaszott);
           } catch (SQLException ex) {
                MainWindow.HibaAblak(parent, ex.toString());
           }
       }
    }
}
